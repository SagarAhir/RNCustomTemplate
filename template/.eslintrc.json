{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "react-native/react-native": true
  },
  "extends": [
    "@react-native",
    "standard-with-typescript",
    "plugin:react/recommended",
    "prettier",
    "prettier/react"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["react", "react-native"],
  "rules": {
    "react-native/no-unused-styles": 2,
    "react-native/split-platform-components": 2,
    "react-native/no-inline-styles": 2,
    "react-native/no-color-literals": 2,
    "react-native/no-raw-text": 2,
    "react-native/no-single-element-style-arrays": 2,
    "eqeqeq": "error",
    "no-duplicate-case": "off",
    "no-return-await": "error",
    "space-in-parens": ["error", "never"],
    "@typescript-eslint/no-duplicate-imports": ["error"],
    "@typescript-eslint/no-explicit-any": "warn",
    "react/self-closing-comp": "warn",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "Object": "Avoid using the `Object` type. Did you mean `object`?",
          "Function": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`.",
          "Boolean": "Avoid using the `Boolean` type. Did you mean `boolean`?",
          "Number": "Avoid using the `Number` type. Did you mean `number`?",
          "String": "Avoid using the `String` type. Did you mean `string`?",
          "Symbol": "Avoid using the `Symbol` type. Did you mean `symbol`?"
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "class",
        "format": ["PascalCase"]
      }
    ],
    "spaced-comment": [
      "error",
      "always",
      {
        "line": {
          "markers": ["#region", "#endregion"]
        }
      }
    ],
    "no-console": "warn",
    "@typescript-eslint/no-empty-interface": "error",
    "no-trailing-spaces": "error",
    "no-unsafe-finally": "error",
    "camelcase": ["error"],
    "react/jsx-curly-brace-presence": [
      "warn",
      { "props": "always", "children": "always", "propElementValues": "always" }
    ]
  }
}
